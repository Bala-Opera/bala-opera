@import '../../styles/breakpoints.module.scss';
@import '../../styles/colors.module.scss';
@import '../../styles/fonts.module.scss';

.container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-direction: column;
  height: 100%;
}

.content {
  @include small-label;
  padding: 0 18px;
  width: 100%;
  margin: auto 0;

  @include md {
    @include medium-label;
    padding: 0 24px;
  }

  @include lg {
    padding: 0 152px;
  }
}

.concept {
  @include lg {
    display: flex;
  }
}
.concept > h3 {
  color: $white-primary;
  @include medium-body;
  @include lg {
    flex: 2;
  }
}
.concept > p {
  color: $gray-primary;
  @include medium-body;
  @include lg {
    flex: 3;
  }
}

.participants {
  @include lg {
    display: flex;
  }
}
.participants > h3 {
  color: $white-primary;
  @include medium-body;
  @include lg {
    flex: 2;
  }
}
.participants > p {
  @include medium-body;
  @include lg {
    flex: 3;
  }
}

.line {
  @include medium-body;
  color: $gray-primary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: clip;
  margin: 12px 0;
}

$colors: (1: $green-secondary, 2: $yellow-primary, 3: $pink-primary, 4: $magenta-secondary, 5: $cyan-secondary, 6: $mustard-primary, 7: $green-primary);
@each $key, $value in $colors
{
  .color-#{$key}
  {
    color: $value;
  }
}

.separator {
  color: $gray-primary;
  padding: 0 6px;
}

.button {
  width: 100%;
  margin-bottom: 100px;
  text-align: center;
}

.drawer {
  transition: transform 500ms ease;
  &.closed {
    transform: translateX(calc(100% - 44px));
  }
}

.menulink {
  transition: all 200ms;
  cursor: pointer;
}
.menudrawer {
  background-color: #111111;
  height: 100vh;
  overflow-x: hidden;
  pointer-events: all;
}

.glowhole {
  transition: opacity 200ms;
  pointer-events: all;
  cursor: pointer;
  opacity: 0;
  &.hover {
    opacity: 1;
  }
}

.menulink {
  text-decoration: none;
  &.hover {
    text-shadow: 0px 0px 10px #ffff80;
  }
}

.staticmenu {
  width: 568px;
  height: 712px;
  transform: translate(var(--dx), var(--dy));
}

.drawerButton {
  padding: 14px;
  background-color: #111111;
  pointer-events: all;
  cursor: pointer;
}

.enter {
  .exitbutton {
    opacity: 0;
  }
  .staticmenu {
    span {
      opacity: 0;
    }
    width: 100vw;
    height: 100vh;
    transform: none;
  }
}
.enterActive {
  .exitbutton {
    opacity: 1;
  }
  .staticmenu {
    span {
      opacity: 1;
    }
    transition: all 500ms cubic-bezier(.1,.02,.06,1) 200ms;
    width: 568px;
    height: 712px;
    transform: translate(var(--dx), var(--dy));
  }
  .staticmenu span, .exitbutton {
    transition: opacity 200ms ease 700ms;
  }
}
.windowwrapper {
  transition: opacity 200ms;
}
.exit {
  &.windowwrapper {
    opacity: 0;
  }
}

.drawerButtonAnimation {
  animation: enter 700ms cubic-bezier(.1,.02,.06,1);
  position: absolute;
  background-color: #111111;
  top: 0;
  right: 0;
  width: 44px;
  height: 44px;
  opacity: 0;
  pointer-events: none;
}

@keyframes enter {
  0% {
    opacity: 1;
    width: 100vw;
    height: 100vh;
  }
  30% {
    opacity: 1;
    width: 100vw;
    height: 100vh;
  }
  100% {
    opacity: 1;
  }
}

.bobbing {
  animation: bob 2s alternate infinite ease-in-out calc(var(--bobDelay) * 0.2s);
}

@keyframes bob {
  from {
    transform: translateY(-10px);
  }
  to {
    transform: translateY(+10px);
  }
}

.bgRotate {
  transform-origin:  736px 648px;

  animation: rotateBg 5s infinite linear;
}
.transitionStripes {
  transform-origin: center;
  // THIS CAUSES A LOT OF LAG!!
  // animation: rotateBg 1s infinite linear;
}

@keyframes rotateBg {
  to {
    transform: rotate(6.792deg);
  }
}

.sparkle {
  opacity: 0;
  transform-origin: 5px 5px;
  animation:
    sparkleOpacity calc(var(--sparkle) * 130ms + 2s) alternate infinite ease-in-out calc(var(--sparkle) * 0.2s + 200ms),
    sparkleRotation calc(var(--sparkle) * 100ms + 2s) infinite linear
  ;
}

@keyframes sparkleOpacity {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes sparkleRotation {
  100% {
    transform: rotate(1turn);
  }
}

.holeCrack {
  animation: holeIn 300ms linear;
}

@keyframes holeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.holeLaser {
  animation: laserUp 1000ms 300ms;
  animation-fill-mode: forwards;
}

@keyframes laserUp {
  100% {
    transform: translateY(-1800px);
  }
}

.laserCover {
  animation-fill-mode: both;
  animation: laserCoverDown 1500ms linear;
}

@keyframes laserCoverDown {
  0% {
    transform: translateY(-1080px);
  }
  70% {
    transform: translateY(-1080px);
  }
  100% {
    transform: translateY(0px);
  }
}

.ring {
  will-change: transform;
  transform-origin: center;
  transform: scale(var(--ringScale));
  animation: ringIn 2000ms calc(var(--ringIndex) * 150ms + 1500ms);
  animation-fill-mode: both;
}

@keyframes ringIn {
  0% {
    transform: scale(0.9) translateX(calc(var(--ringDir) * 2500px));
  }
  60% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(var(--ringScale));
  }
}

.ringPulse {
  will-change: transform;
  transform-origin: center;
  animation: pulsate 2s infinite calc(var(--ringIndex) * 40ms + 3500ms);
  animation-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
}

@keyframes pulsate {
  0% {
    transform: scale(1);
  }
  20% {
    transform: scale(1.05);
  }
  50% {
    transform: scale(1.05);
  }
  70% {
    transform: scale(1);
  }
  100% {
    transform: scale(1);
  }
}

.circleMask {
  transform-origin: center;
  animation: expand 1500ms 1700ms;
  animation-fill-mode: both;
}

@keyframes expand {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

.ringContainer {
  --maxRadius: (100vw + 100vh) / 1.3;
  position: fixed;
  width: 100vw;
  height: 100vh;
}
.shadowCircle {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  --radius: calc(var(--maxRadius) * var(--scroll) + 60px * (1 - var(--scroll)));
  width: var(--radius);
  height: var(--radius);
  border-radius: 100%;
  box-shadow: 0 0 50px 50px black;
  background: black;
}

.scrollDown {
  position: absolute;
  bottom: 10%;
  left: 50%;
  transform: translate(-50%, -50%);
  color:white;
  background: black;
  border: 1px solid white;
  font-size: 1.5em;
  padding: 12px;
  font-family: "NON-Natural-Grotesk-Regular";
}

.shadowCircle, .scrollDown {
  transition: opacity 2000ms 1700ms;
}

.enter {
  .shadowCircle, .scrollDown {
    opacity: 0;
  }
}
.enterActive {
  .shadowCircle, .scrollDown {
    opacity: 1;
  }
}
